--- What happens when you initialize a repository? Why do you need to do it?

Git creates necessary structure for tracking changes to a project. It's the first step in getting things ready before adding files to track and committing changes.

--- How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is where changes in the working directory are tracked before they are committed to the repository. It allows you to see what has been changed and what files are being tracked.

--- How can you use the staging area to make sure you have one commit per logical change?

You can make sure that only the files you intend to be changed are part of the staging area before committing

--- What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you want to try something without fear of damaging your working codebase.

--- How do the diagrams help you visualize the branch structure?

By showing the difference between branches and commits. Before this I never knew that you could commit changes that would effectively be lost since they didn't have a branch name to track them.

--- What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result depends on the strategy used to merge, but so far we have see the merge include common elements between the two branches plus anything added minus anything one of the branches removed. It's hella confusing and pretty amazing really.
